input {
	beats {
		port => 5044
		# Gestion des erreurs de protocole
		ssl_enabled => false
	}

	tcp {
		port => 50000
	}
}

filter {



	# Parse des logs d'application
	grok {
		match => {
			"message" => "%{TIMESTAMP_ISO8601:timestamp}: \[%{LOGLEVEL:log_level}\] %{GREEDYDATA:log_message}"
		}
		tag_on_failure => ["grok_failure"]
	}

	# # Conversion du timestamp
	# date {
	# 	match => [ "timestamp", "ISO8601" ]
	# 	target => "@timestamp"
	# }

	# Enrichissement
	mutate {
		add_tag => [ "processed", "app_logs" ]
		add_field => {
			"environment" => "development"
			"service" => "test-app"
			"pipeline_version" => "1.0"
		}
	}

	# Logique Babylove
	if [log_level] == "WARN" {
		mutate {
			add_field => { "babylove" => "crazy"}
		}
	}
	else {
		mutate {
			add_field => { "babylove" => "contente"}
		}
	}
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		index => "logs-%{+YYYY.MM.dd}"
		# Gestion des erreurs de connexion
		retry_initial_interval => 5
		retry_max_interval => 30
	}

	# Debug en dÃ©veloppement
	stdout {
		codec => rubydebug
	}
}
